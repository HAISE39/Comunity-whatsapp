gg.setVisible(false)
modbyfami = os.date ('           ⚡MODMENU BY VELLIX⚡\
\
           ❦ ════ •⊰❂ - ❂⊱• ════ ❦\
\
📆Dᴀᴛᴇ📆 : %Y/%m/%d\
\
🕛Tɪᴍᴇ🕛 : %H:%M:%S\
\
⏳Exᴘɪʀᴇᴅ Sᴄʀɪᴘᴛ⏳ : 0000/00/00\
\
           ❦ ════ •⊰❂ - ❂⊱• ════ ❦')
gg.alert(modbyfami)
gg.setVisible(true)

gg.setVisible(false)
gg.alert("©Hack\n©YouTube : VELLIX_AO\n©Fb: Kurol watu\n©Subscribe Channel Free")


script_functions = { -- table(2c9c212)
	['ARM8'] = { -- table(4f54de3)
		[1] = { -- table(54b1cbd)
		    ['active_emoji'] = "[ ✔ ]",
			['edits'] = { -- table(6834580)
				[1] = { -- table(611c7b9)
					[1] = '0xAAB85C',
					[2] = '~A8 B [PC,#-0x20]',
					[3] = false,
					[4] = 'public class UltComponent : BattleComponent ',
					[5] = '	public void set_energy(float value) { }',
					[6] = '0xAAB85C',
				},
				[2] = { -- table(28297fe)
					[1] = '0xAAC784',
					[2] = '~A8 MOV W0, #1',
					[3] = false,
					[4] = 'public class UltComponent : BattleComponent ',
					[5] = '	public bool IsCDOver() { }',
					[6] = '0xAAC784',
				},
				[3] = { -- table(85e4b5f)
					[1] = '0xAAC788',
					[2] = '~A8 RET',
					[3] = false,
					[4] = 'public class UltComponent : BattleComponent ',
					[5] = '	public bool IsCDOver() { }',
					[6] = '0xAAC784',
				},
			},
			['hooks'] = { -- table(aeb02b2)
				[1] = { -- table(88e9203)
					[1] = 'public class UltComponent : BattleComponent ',
					[2] = '	public float get_energy() { }',
					[3] = '0xAAB83C',
				},
			},
			['inactive_emoji'] = "[ ✖ ]",
			['name'] = 'Ulti No CD V1',
		},
		[2] = {
		    ['active_emoji'] = "[ ✔ ]",
			['edits'] = {
				[1] = {
					[1] = '0xAAB9B4',
					[2] = '~A8 B [PC,#-0x20]',
					[3] = false,
					[4] = 'public class UltComponent : BattleComponent ',
					[5] = '	public void set_duration(float value) { }',
					[6] = '0xAAB9B4',
				},
			},
			['hooks'] = { -- table(340f411)
				[1] = { -- table(32b4976)
					[1] = 'public class UltComponent : BattleComponent ',
					[2] = '	public float get_duration() { }',
					[3] = '0xAAB994',
				},
			},
			['inactive_emoji'] = "[ ✖ ]",
			['name'] = 'Ulti No CD V2',
		},
		[3] = {
		    ['active_emoji'] = "[ ✔ ]",
			['edits'] = {
				[1] = {
					[1] = '0xAA3454',
					[2] = '~A8 MOV W0, #999',
					[3] = false,
					[4] = 'public class ExecuteComponent : BattleComponent ',
					[5] = '	public int get_point() { }',
					[6] = '0xAA3454',
				},
				[2] = { -- table(d144498)
					[1] = '0xAA3458',
					[2] = '~A8 MOV W1, #1000',
					[3] = false,
					[4] = 'public class ExecuteComponent : BattleComponent ',
					[5] = '	public int get_point() { }',
					[6] = '0xAA3454',
				},
				[3] = { -- table(417b4f1)
					[1] = '0xAA345C',
					[2] = '~A8 MUL W0, W0, W1',
					[3] = false,
					[4] = 'public class ExecuteComponent : BattleComponent ',
					[5] = '	public int get_point() { }',
					[6] = '0xAA3454',
				},
				[4] = { -- table(a9fa8d6)
					[1] = '0xAA3460',
					[2] = '~A8 MOV W1, #999',
					[3] = false,
					[4] = 'public class ExecuteComponent : BattleComponent ',
					[5] = '	public int get_point() { }',
					[6] = '0xAA3454',
				},
				[5] = { -- table(6f04757)
					[1] = '0xAA3464',
					[2] = '~A8 ADD W0, W0, W1',
					[3] = false,
					[4] = 'public class ExecuteComponent : BattleComponent ',
					[5] = '	public int get_point() { }',
					[6] = '0xAA3454',
				},
				[6] = { -- table(e551244)
					[1] = '0xAA3468',
					[2] = '~A8 RET',
					[3] = false,
					[4] = 'public class ExecuteComponent : BattleComponent ',
					[5] = '	public int get_point() { }',
					[6] = '0xAA3454',
				},
			},
			['hooks'] = { -- table(bfe2675)
			},
			['inactive_emoji'] = "[ ✖ ]",
			['name'] = 'Execute Boss',
		},
		[4] = {
		    ['active_emoji'] = "[ ✔ ]",
			['edits'] = { -- table(dc801f3)
				[1] = { -- table(3b30eb0)
					[1] = '0xAA2C44',
					[2] = '~A8 MOV W0, #999',
					[3] = false,
					[4] = 'public class DashComponent : BattleComponent ',
					[5] = '	public float get_energy() { }',
					[6] = '0xAA2C44',
				},
				[2] = { -- table(dd71129)
					[1] = '0xAA2C48',
					[2] = '~A8 MOV W1, #1000',
					[3] = false,
					[4] = 'public class DashComponent : BattleComponent ',
					[5] = '	public float get_energy() { }',
					[6] = '0xAA2C44',
				},
				[3] = { -- table(a82fcae)
					[1] = '0xAA2C4C',
					[2] = '~A8 MUL W0, W0, W1',
					[3] = false,
					[4] = 'public class DashComponent : BattleComponent ',
					[5] = '	public float get_energy() { }',
					[6] = '0xAA2C44',
				},
				[4] = { -- table(f56ca4f)
					[1] = '0xAA2C50',
					[2] = '~A8 MOV W1, #999',
					[3] = false,
					[4] = 'public class DashComponent : BattleComponent ',
					[5] = '	public float get_energy() { }',
					[6] = '0xAA2C44',
				},
				[5] = { -- table(1b265dc)
					[1] = '0xAA2C54',
					[2] = '~A8 ADD W0, W0, W1',
					[3] = false,
					[4] = 'public class DashComponent : BattleComponent ',
					[5] = '	public float get_energy() { }',
					[6] = '0xAA2C44',
				},
				[6] = { -- table(82696e5)
					[1] = '0xAA2C58',
					[2] = '~A8 FMOV S0, W0',
					[3] = false,
					[4] = 'public class DashComponent : BattleComponent ',
					[5] = '	public float get_energy() { }',
					[6] = '0xAA2C44',
				},
				[7] = { -- table(48635ba)
					[1] = '0xAA2C5C',
					[2] = '~A8 SCVTF S0, S0',
					[3] = false,
					[4] = 'public class DashComponent : BattleComponent ',
					[5] = '	public float get_energy() { }',
					[6] = '0xAA2C44',
				},
				[8] = { -- table(95fbc6b)
					[1] = '0xAA2C60',
					[2] = '~A8 FMOV W0, S0',
					[3] = false,
					[4] = 'public class DashComponent : BattleComponent ',
					[5] = '	public float get_energy() { }',
					[6] = '0xAA2C44',
				},
				[9] = { -- table(eee03c8)
					[1] = '0xAA2C64',
					[2] = '~A8 RET',
					[3] = false,
					[4] = 'public class DashComponent : BattleComponent ',
					[5] = '	public float get_energy() { }',
					[6] = '0xAA2C44',
				},
			},
			['hooks'] = { -- table(8c57c62)
			},
			['inactive_emoji'] = "[ ✖ ]",
			['name'] = 'Unlimited Dash',
		},
		[5] = { -- table(b0d0fe2)
			['edits'] = { -- table(445aa9)
			},
			['fieldEdits'] = { -- table(8c98e30)
				[1] = { -- table(9ed40b5)
					['Edit'] = '0',
					['EditType'] = 4,
					['className'] = 'ActiveSkill',
					['fieldName'] = 'm_CdTime',
					['fieldOffset'] = '0x1C',
					['fieldType'] = 'int',
				},
			},
			['hooks'] = { -- table(a32cf73)
			},
			['inactive_emoji'] = "[ 🌀 ]",
			['name'] = 'No Cd Skill',
		},
	},
}
generated_script_title = "────「✦ VELLIXAO ✦」────\n ─────────────"
target_process = "com.fattoy.swordash.android"
target_name = "Swordash"
arch = gg.getTargetInfo()
if gg.getTargetPackage() ~= target_process then
gg.alert("This script was written for "..target_name.." ("..target_process..") but you are attached to "..arch.label.." ("..gg.getTargetPackage().."). Attach to the correct process and try again.")
os.exit()
end
function getlib_1()
	lib_size = 0
	lib_index = ""

	for i,v in pairs(gg.getRangesList("libil2cpp.so")) do
		if v["end"] - v["start"] > lib_size and v["state"] == "Xa" then
			lib_size = v["end"] - v["start"]
			lib_index = i
		end
	end

	BASEADDR = gg.getRangesList("libil2cpp.so")[lib_index].start
end

function getlib_2()
	lib_size = 0
	lib_index = ""

	for i,v in pairs(gg.getRangesList("split_config.armeabi_v7a.apk")) do
		if v["end"] - v["start"] > lib_size and v["state"] == "Xa" then
			lib_size = v["end"] - v["start"]
			lib_index = i
		end
	end

	BASEADDR = gg.getRangesList("split_config.armeabi_v7a.apk")[lib_index].start
end

function getlib_3()
	lib_size = 0
	lib_index = ""

	for i,v in pairs(gg.getRangesList("split_config.arm64_v8a.apk")) do
		if v["end"] - v["start"] > lib_size and v["state"] == "Xa" then
			lib_size = v["end"] - v["start"]
			lib_index = i
		end
	end

	BASEADDR = gg.getRangesList("split_config.arm64_v8a.apk")[lib_index].start
end

if pcall(getlib_1) == false then
	if pcall(getlib_2) == false then
		getlib_3()
	end
end

original_values = {}
active_array = {}
if arch.x64 == true then
	end_bool = "C0035FD6r"
	file_ext = "ARM8"
else
	end_bool = "1EFF2FE1r"
	file_ext = "ARM7"
end
	
function get_original_values(func_index)
	local temp_table = {}

		for i,v in pairs(script_functions[file_ext][func_index].edits) do
			if script_functions[file_ext][func_index]["edits"][i][3] == false then
				temp_table[1] = {}
				temp_table[1].address = script_functions[file_ext][func_index]["edits"][i][1] + BASEADDR 
				temp_table[1].flags = gg.TYPE_DWORD
				temp_table = gg.getValues(temp_table)
				script_functions[file_ext][func_index]["edits"][i][7] = {temp_table[1].value}
			end
			if script_functions[file_ext][func_index]["edits"][i][3] ==  true then
				temp_table[1] = {}
				temp_table[1].address = script_functions[file_ext][func_index]["edits"][i][1] + BASEADDR 
				temp_table[1].flags = gg.TYPE_DWORD
				temp_table[2] = {}
				temp_table[2].address = script_functions[file_ext][func_index]["edits"][i][1] + 4 + BASEADDR 

				temp_table[2].flags = gg.TYPE_DWORD
				temp_table = gg.getValues(temp_table)
				script_functions[file_ext][func_index]["edits"][i][7] = {temp_table[1].value,temp_table[2].value}
		end
	end
end

function restore_value(func_index)
	restore_temp_table = {}
	local temp_index = 1
	for i,v in pairs(script_functions[file_ext][func_index].edits) do
		restore_temp_table[temp_index] = {}
		restore_temp_table[temp_index].address = v[1] + BASEADDR
		restore_temp_table[temp_index].flags = gg.TYPE_DWORD 
		restore_temp_table[temp_index].value = v[7][1]
		temp_index = temp_index + 1
		if v[3] == true then
			restore_temp_table[temp_index] = {}
			restore_temp_table[temp_index].address = v[1] + BASEADDR + 4
			restore_temp_table[temp_index].flags = gg.TYPE_DWORD 
			restore_temp_table[temp_index].value = v[7][2]
			temp_index = temp_index + 1
		end
	end
	gg.setValues(restore_temp_table)
	gg.toast(string.gsub(script_functions[file_ext][func_index]["name"],"Disable ","").." disabled.")
        gg.sleep(1000)
end

function set_value(func_index)
	if string.find(script_functions[file_ext][func_index]["name"],"^Disable ") then 
		script_functions[file_ext][func_index]["name"] = string.gsub(script_functions[file_ext][func_index]["name"],"^Disable ","")
		restore_value(func_index)
	else
		script_functions[file_ext][func_index]["name"] = "Disable "..script_functions[file_ext][func_index]["name"]
		local count = 0
		set_temp_table = {}
		local temp_index = 1
		for i,v in pairs(script_functions[file_ext][func_index].edits) do
			set_temp_table[temp_index] = {}
			set_temp_table[temp_index].address = v[1] + BASEADDR
			set_temp_table[temp_index].flags = gg.TYPE_DWORD 
			set_temp_table[temp_index].value = v[2]
			temp_index = temp_index + 1
			if v[3] == true then
				set_temp_table[temp_index] = {}
				set_temp_table[temp_index].address = v[1] + BASEADDR + 4
				set_temp_table[temp_index].flags = gg.TYPE_DWORD 
				set_temp_table[temp_index].value = end_bool
				temp_index = temp_index + 1
			end
			for index,value in pairs(v) do
				count = count + 1
			end
			if count == 6 then 
				get_original_values(func_index)
			end
		end
		gg.setValues(set_temp_table)
		gg.toast(string.gsub(script_functions[file_ext][func_index]["name"],"Disable ","").." enabled.")
	end
end

function fieldEditsEdit(ClassName, Offset, Edit, EditType, EditIfEqual)
    local offset
    local pointerType
    if arch.x64 then
        offset = 16
        pointerType = gg.TYPE_QWORD
    else
        offset = 8
        pointerType = gg.TYPE_DWORD
    end
    gg.clearResults()
    gg.setRanges(gg.REGION_OTHER)
    if ca_range == true then
        gg.setRanges(gg.REGION_C_ALLOC)
    end
    gg.searchNumber(":" .. string.char(0) .. ClassName .. string.char(0), nil, nil, nil, range_start, nil, 1)
    local result = gg.getResults(1, 1)
    gg.clearResults()
    gg.setRanges(gg.REGION_C_ALLOC | gg.REGION_C_HEAP)
    gg.searchNumber(result[1].address, pointerType)
    local results = gg.getResults(gg.getResultsCount())
    for i, v in pairs(results) do
        results[i].address = results[i].address - offset
    end
    gg.clearResults()
    gg.setRanges(gg.REGION_ANONYMOUS)
    gg.loadResults(results)
    gg.searchPointer(0)
    results = gg.getResults(gg.getResultsCount())
    gg.clearResults()
    gg.setRanges(gg.REGION_ANONYMOUS)
    gg.loadResults(results)
    gg.searchPointer(0)
    results = gg.getResults(gg.getResultsCount())
    local tempTable = {}
    for i, v in pairs(results) do
        tempTable[i] = {
            address = v.value,
            flags = pointerType
        }
    end
    results = gg.getValues(tempTable)
    for i, v in pairs(results) do
        results[i].address = results[i].address + Offset
        results[i].flags = EditType
    end
    results = gg.getValues(results)
    if EditIfEqual then
        if type(EditIfEqual) == "string" then
            ::enter_value::
            local menu = gg.prompt(
                {
                    EditIfEqual
                }, 
                nil, 
                {
                    "number"
                }
            )
            if menu ~= nil then
                EditIfEqual = menu[1]
            else
                goto enter_value
            end
        end
        gg.loadResults(results)
        gg.refineNumber(EditIfEqual, EditType)
        results = gg.getResults(gg.getResultsCount())
        for i, v in pairs(results) do
            results[i].value = Edit
        end
    else
        if Edit:find("X4") then
            for i, v in pairs(results) do
                results[i].address = results[i].address + 4
            end
            results = gg.getValues(results)
        end
        if Edit:find("X8") then
            for i, v in pairs(results) do
                results[i].address = results[i].address + 8
            end
            results = gg.getValues(results)
        end
        for i, v in pairs(results) do
            results[i].value = Edit
        end
    end
    gg.setValues(results)
    gg.clearList()
    gg.clearResults()
    gg.toast("Hack On")
end

function bchome()
   local shouldRunFields = {}
	main_menu_items = {}
	for i,v in pairs(script_functions[file_ext]) do
        if v["active_emoji"] then
        	active_emoji = v["active_emoji"] 
        else
        	active_emoji = '[ ✔ ]'
        end
        if v["inactive_emoji"] then
        	inactive_emoji = v["inactive_emoji"] 
        else
        	inactive_emoji = '[ ✖ ]'
        end
		if string.find(v["name"],"^Disable") then
           shouldRunFields[i] = false
			main_menu_items[i] = active_emoji.." "..v["name"]
		else
           shouldRunFields[i] = true
			main_menu_items[i] = inactive_emoji.." "..v["name"]
		end
	end
	main_menu_items[#main_menu_items + 1] = " Exit"
	main_menu = gg.choice(main_menu_items,nil,generated_script_title)
	if main_menu ~= nil then
		if main_menu == #main_menu_items then
			os.exit()
		end
        if #script_functions[file_ext][main_menu].edits > 0 then
            set_value(main_menu)
        end
        if script_functions[file_ext][main_menu].fieldEdits and shouldRunFields[main_menu] == true then
            for i,v in pairs(script_functions[file_ext][main_menu].fieldEdits) do
                fieldEditsEdit(v.className, v.fieldOffset, v.Edit, v.EditType, v.EditIfEqual)
            end
        end
	end
end

print("⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⢛⡛⠿⠛⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿")
print("⣿⣿⣿⣿⣿⣿⣿⡿⠟⡉⣡⡖⠘⢗⣀⣀⡀⢢⣐⣤⣉⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿")
print("⣿⣿⣿⣿⣿⡿⠉⣠⣲⣾⡭⣀⢟⣩⣶⣶⡦⠈⣿⣿⣿⣷⣖⠍⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿")
print("⣿⣿⣿⣿⡛⢀⠚⢩⠍⠀⠀⠡⠾⠿⣋⡥⠀⣤⠈⢷⠹⣿⣎⢳⣶⡘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿")
print("⣿⣿⣿⡏⢀⡤⠉⠀⠀⠀⣴⠆⠠⠾⠋⠁⣼⡿⢰⣸⣇⢿⣿⡎⣿⡷⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿")
print("⣿⣿⣿⠀⢸⢧⠁⠀⠀⢸⠇⢐⣂⣠⡴⠶⣮⢡⣿⢃⡟⡘⣿⣿⢸⣷⡀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿")
print("⣿⣿⣯⢀⡏⡾⢠⣿⣶⠏⣦⢀⠈⠉⡙⢻⡏⣾⡏⣼⠇⢳⣿⡇⣼⡿⡁⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿")
print("⣿⣿⣿⠈⡇⡇⡘⢏⡃⠀⢿⣶⣿⣷⣿⣿⣿⡘⡸⠇⠌⣾⢏⡼⣿⠇⠀⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿")
print("⣿⣿⣿⡀⠀⢇⠃⢢⡙⣜⣾⣿⣿⣿⣿⣿⣿⣧⣦⣄⡚⣡⡾⣣⠏⠀⠀⢀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿")
print("⣿⣿⣿⣷⡀⡀⠃⠸⣧⠘⢿⣿⣿⣿⣿⣿⣻⣿⣿⣿⣿⠃⠘⠁⢈⣤⡀⣬⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿")
print("⣿⣿⣿⣿⣇⣅⠀⠀⠸⠀⣦⡙⢿⣿⣿⣿⣿⣿⣿⡿⠃⢀⣴⣿⣿⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿")
print("⣿⣿⡿⢛⣉⣉⣀⡀⠀⢸⣿⣿⣷⣬⣛⠛⢛⣩⣵⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿")
print("⣿⢋⣴⣿⣿⣿⣿⣿⣦⣬⣛⣻⠿⢿⣿⡇⠈⠙⢛⣛⣩⣭⣭⣝⡛⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿")
print("⡇⣼⣿⣿⣿⣿⣿⡿⡹⢿⣿⣽⣭⣭⣭⣄⣙⠻⢿⣿⡿⣝⣛⣛⡻⢆⠙⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿")
print("⢥⣿⣿⣿⣿⣿⣿⢇⣴⣿⣿⣿⣿⣿⡿⣿⣿⣿⣷⣌⢻⣿⣿⣿⣿⣿⣷⣶⣌⠛⢿⣿⣿⣿⣿⣿⣿⣿⣿")
print("⡆⣿⣿⣿⣿⣿⡟⣸⣿⡿⣿⣿⣿⣿⣄⣸⣿⣿⣿⣿⣦⢻⣿⣿⣿⣿⣿⣿⣿⡓⠎⠻⣿⣿⣿⣿⣿⣿⣿")
print("⣿⠸⣿⣿⣿⣿⡇⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⣿⣿⣿⣿⣿⣿⣿")
print("⣿⣄⢻⣿⣿⣿⣿⡸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠸⣿⣿⣿⣿⣿⣿⣿⣿⣿⢀⣿⣿⣿⣿⣿⣿⣿")
print("⣿⣿⠈⣿⣿⣿⣿⣷⢙⠿⣿⣿⣿⣿⣿⣿⣿⠿⣟⣩⣴⣷⣌⠻⣿⣿⣿⣿⣿⣿⡟⢠⣿⣿⣿⣿⣿⣿⣿")
print("⣿⣿⣆⢻⣿⣿⣿⣿⡇⣷⣶⣭⣭⣭⣵⣶⣾⣿⣿⣿⣿⣿⣿⣷⣌⠹⢿⣿⡿⢋⣠⣿⣿⣿⣿⣿⣿⣿⣿")
print("⣿⣿⣿⡚⣿⣿⣿⣿⡇⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⢀⣤⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿")
print("⣿⣿⣿⡇⢻⣿⣿⣿⡇⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⣿⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿")
print("⣻⣿⣿⣷⠈⣿⣿⣿⣿⢆⠀⢋⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⣿⣿⣤⡘⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿")
print("⣿⣿⣿⣿⠀⣻⣿⣿⣿⠀⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣎⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿")
print("⣿⣿⣿⣿⣒⣻⣿⣿⢏⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⢻⣿⣿⣿⣿⣿⣿⣿")
print("⣿⣿⣿⣿⣇⢹⣿⡏⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣬⡻⣿⣿⣿⣿⣿")
print("⣿⣿⣿⣿⣿⡄⠻⢱⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣝⢎⢻⣿⣿⣿")
print("⣿⣿⣿⣿⣿⣷⢀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⣿⣿⣾⣦⢻⣿⣿")
print("⣿⣿⣿⣿⣿⡇⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⣼⣿⣿⣿⣿⣆⢻⣿")
print("⣿⣿⣿⣿⡿⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣮⡙⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⣰⣿⣿⣿⣿⣿⣿⣆⣿")
print("⣿⣿⣿⣿⡇⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣝⢿⣿⣿⣿⣿⣿⣿⣿⢡⣿⣿⣿⣿⣿⣿⣿⣿⡌")
print("⣿⣿⣿⣿⡇⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣝⢿⣿⣿⣿⣿⡿⢸⣿⣿⣿⣿⣿⣿⣿⣿⡇")
print("⣿⣿⣿⣿⡇⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣆⢻⣿⣿⣿⡇⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷")
print("⣿⣿⣿⣿⣧⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⢹⡿⠁⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿")
print("⣿⣿⣿⣿⣿⡌⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⢰⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿")
print("⣿⣿⣿⣿⣿⣷⡘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡌⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿")

bchome()

while true do
	if gg.isVisible() then
		gg.setVisible(false)
		bchome()
	end
	gg.sleep(100)
end
